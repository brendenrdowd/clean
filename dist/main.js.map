{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/components/log-reg/log-reg.component.css","webpack:///./src/app/components/log-reg/log-reg.component.html","webpack:///./src/app/components/log-reg/log-reg.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/interlink.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogRegComponent } from './components/log-reg/log-reg.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ListComponent } from './components/list/list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:\"\",\r\n    pathMatch:'full',\r\n    component:LogRegComponent\r\n  },\r\n  {\r\n    path:\"dashboard\",\r\n    pathMatch:'full',\r\n    component: DashboardComponent\r\n  },\r\n  {\r\n    path:\"list\",\r\n    component: ListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"\\r\\n<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Clean';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\n\r\n//material components\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatButtonModule, MatCheckboxModule } from '@angular/material';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n//my components\r\nimport { LogRegComponent } from './components/log-reg/log-reg.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { InterlinkService } from './interlink.service';\r\nimport { ListComponent } from './components/list/list.component';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LogRegComponent,\r\n    NavbarComponent,\r\n    DashboardComponent,\r\n    ListComponent,\r\n    FooterComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule, MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    MatCardModule,\r\n    MatListModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [InterlinkService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"input[type='text']{\\r\\n    text-align:right;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"paper container\\\">\\r\\n  <!-- add a list deletion confirmation warning -->\\r\\n  <!-- Need to fix navbar glitch -->\\r\\n  <!-- error catch -->\\r\\n  <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\">\\r\\n    <div *ngIf=\\\"title.errors.minlength\\\" class=\\\"alert alert-danger\\\">\\r\\n      List names must be at least 3 characters!\\r\\n    </div>\\r\\n    <div *ngIf=\\\"title.errors.maxlength\\\" class=\\\"alert alert-danger\\\">\\r\\n      List names cannot be more than 55 characters!\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- list creation and list of lists -->\\r\\n  <table class=\\\"table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <td align=\\\"center\\\"><i class=\\\"fas fa-plus fa-3x flex-middle fade\\\"></i></td>\\r\\n\\r\\n        <td>\\r\\n          <form (submit)=\\\"newList()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input class=\\\"input-block\\\" required minlength=\\\"3\\\" maxlength=\\\"55\\\" placeholder=\\\"New List\\\" type=\\\"text\\\" id=\\\"newList\\\" name=\\\"title\\\"\\r\\n                [(ngModel)]=\\\"list.title\\\" #title=\\\"ngModel\\\">\\r\\n              <input type=\\\"submit\\\" class=\\\"hideSubmit\\\">\\r\\n            </div>\\r\\n          </form>\\r\\n        </td>\\r\\n\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tr *ngFor=\\\"let list of myLists\\\" class=\\\"pointer title\\\">\\r\\n      <td class=\\\"showClose danger\\\"><i class=\\\"fas fa-times hideClose\\\" (click)=\\\"deleteList(list._id)\\\"></i></td>\\r\\n      <!-- replace the deleteList function with a modal that asks to confirm and offers the function instead -->\\r\\n      <td (click)=\\\"viewList(list._id)\\\">{{list.title}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { InterlinkService } from '../../interlink.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  currentUser:object\r\n  list:object\r\n  // allLists\r\n  myLists:object[]=[]\r\n  constructor(private _interlink: InterlinkService, private _router: Router) {\r\n    this.list = {\r\n      title:\"\"\r\n    }\r\n  }\r\n\r\n  newList(){\r\n    if(this.list['title'].length > 2){\r\n      this._interlink.newList(this.list,(res)=>{\r\n        //can skip this callback and do it all in service, will clean up later\r\n        this.list = res.json()\r\n        this.viewList(this.list['_id']);\r\n      })\r\n    }\r\n  }\r\n  \r\n  viewList(id){\r\n    this._interlink.viewList(id);\r\n  }\r\n\r\n  deleteList(id){\r\n    this._interlink.deleteList(id,()=>{\r\n      this._interlink.list = null;\r\n        this._interlink.getLists(()=>{\r\n          this.myLists = this._interlink.myLists;\r\n        })\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._interlink.authenticate((data)=>{\r\n      if(data){\r\n        this.myLists = [];\r\n        this._interlink.list = null;\r\n        this._interlink.getLists(()=>{\r\n          this.myLists = this._interlink.myLists;\r\n        })\r\n      } else {\r\n        this._router.navigate([''])\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \".footer {\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height: 60px;\\r\\n    line-height: 60px;\\r\\n    background-color: #f5f5f5;\\r\\n}\"","module.exports = \"<footer class=\\\"footer\\\">\\r\\n  <div class=\\\"container\\\">\\r\\n    <span class=\\\"text-muted\\\">© 2018 Brenden Dowd. Built using the <a href=\\\"https://cli.angular.io/\\\">Angular CLI</a> and <a\\r\\n        href=\\\"https://www.getpapercss.com/\\\">PaperCSS</a> </span>\\r\\n  </div>\\r\\n</footer>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".table-hover tbody tr:hover {\\r\\n    color: green;\\r\\n}\\r\\ninput[type='text']{\\r\\n    text-align:right;\\r\\n}\\r\\n.red{\\r\\n    color:red;\\r\\n}\\r\\n.crossed{\\r\\n    text-decoration: line-through;\\r\\n    opacity: 0.5;\\r\\n}\"","module.exports = \"<app-navbar></app-navbar>\\r\\n<div class=\\\"paper container\\\">\\r\\n  <h3>{{myList.title}}</h3>\\r\\n  <div *ngIf=\\\"title.invalid && (title.dirty || title.touched)\\\">\\r\\n    <div *ngIf=\\\"title.errors.minlength\\\" class=\\\"alert alert-danger\\\">\\r\\n      Item names must be at least 3 characters!\\r\\n    </div>\\r\\n    <div *ngIf=\\\"title.errors.maxlength\\\" class=\\\"alert alert-danger\\\">\\r\\n      Item names cannot be more than 55 characters!\\r\\n    </div>\\r\\n  </div>\\r\\n  <table class=\\\"table-hover\\\">\\r\\n    <thead>\\r\\n      <tr>\\r\\n        <td align=\\\"center\\\"><i class=\\\"fas fa-plus fa-3x flex-middle fade\\\"></i></td>\\r\\n\\r\\n        <td>\\r\\n          <form (submit)=\\\"newItem()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <input class=\\\"input-block\\\" required minlength=\\\"3\\\" maxlength=\\\"55\\\" placeholder=\\\"New Item\\\" type=\\\"text\\\" id=\\\"newItem\\\" name=\\\"title\\\"\\r\\n                [(ngModel)]=\\\"item.title\\\" #title=\\\"ngModel\\\">\\r\\n              <input type=\\\"submit\\\" class=\\\"hideSubmit\\\">\\r\\n            </div>\\r\\n          </form>\\r\\n        </td>\\r\\n\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody *ngIf=\\\"listItems\\\">\\r\\n      <tr *ngFor=\\\"let item of listItems\\\" class=\\\"pointer title\\\">\\r\\n        <td class=\\\"showClose\\\"><i class=\\\"fas fa-times red hideClose\\\" (click)=\\\"deleteItem(item._id)\\\"></i></td>\\r\\n        <!-- replace the deleteList function with a modal that asks to confirm and offers the function instead -->\\r\\n        <td *ngIf=\\\"item.checked\\\" class=\\\"crossed\\\" (click)=\\\"check(item._id)\\\">{{item.title}}</td>\\r\\n        <td *ngIf=\\\"!item.checked\\\" (click)=\\\"check(item._id)\\\">{{item.title}}</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\\r\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\r\nimport { InterlinkService } from '../../interlink.service';\r\nimport { Router,ActivatedRoute, Params } from '@angular/router';\r\nimport { ViewCompileResult } from '@angular/compiler/src/view_compiler/view_compiler';\r\n\r\n@Component({\r\n  selector: 'app-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.css']\r\n})\r\nexport class ListComponent implements OnInit {\r\n  myList:object\r\n  item:object\r\n  listItems:object[]\r\n  constructor(private _interlink: InterlinkService, private _router: Router, private activatedRoute: ActivatedRoute) {\r\n    this.myList = {\r\n      title:\"\",\r\n      items:[]\r\n    }\r\n    this.item = {\r\n      title: \"\",\r\n      checked: Boolean,\r\n      _list: \"\"\r\n    }\r\n  }\r\n  \r\n  newItem(){\r\n    if(this.item['title'].length > 2){\r\n      this._interlink.newItem(this.item,(res)=>{\r\n        this.item['title'] = \"\"\r\n        this._interlink.updateList(()=>{\r\n          this.myList = this._interlink.list;\r\n          this.listItems = this.myList['items'];\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  deleteItem(id){\r\n    this._interlink.deleteItem(id,()=>{\r\n        this._interlink.updateList(()=>{\r\n          this.myList = this._interlink.list;\r\n          this.listItems = this.myList['items'];\r\n        })\r\n    });\r\n  }\r\n\r\n  check(id){\r\n    this._interlink.check(id,()=>{\r\n      this._interlink.updateList(()=>{\r\n        this.myList = this._interlink.list;\r\n        this.listItems = this.myList['items'];\r\n      })\r\n    })\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this._interlink.authenticate((data) => {\r\n      if (data) {\r\n        this.myList = this._interlink.list;\r\n        this.item['_list'] = this._interlink.list['_id']\r\n        this.listItems = this.myList['items'];\r\n      } else {\r\n        this._router.navigate([''])\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".greeting{\\r\\n    margin-top:30px;\\r\\n}\"","module.exports = \"<div class=\\\"paper container greeting\\\">\\r\\n  <h2 class=\\\"display-3\\\">Welcome to Clean</h2>\\r\\n  <p>Clean is a simple productivity manager designed to make your life easier. </p>\\r\\n  <p>Create an account below to get started!</p>\\r\\n  <hr>\\r\\n\\r\\n  <div class=\\\"errorfield\\\">\\r\\n    <div *ngIf=\\\"errorMessages.length >= 1\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div *ngFor=\\\"let error of errorMessages\\\">\\r\\n        <p>{{error}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"name.errors.required\\\">\\r\\n        First Name is required!\\r\\n      </div>\\r\\n      <div *ngIf=\\\"name.errors.minlength\\\">\\r\\n        First Name must be at least 2 characters long!\\r\\n      </div>\\r\\n      <div *ngIf=\\\"name.errors.maxlength\\\">\\r\\n        First Name cannot be more than 15 characters long!\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"newEmail.invalid && (newEmail.dirty || newEmail.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"newEmail.errors.required\\\">\\r\\n        Email is required!\\r\\n      </div>\\r\\n      <div *ngIf=\\\"newEmail.errors.pattern\\\">\\r\\n        Please enter a valid email!\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"newPassword.invalid && (newPassword.dirty || newPassword.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"newPassword.errors.required\\\">\\r\\n        Password is required!\\r\\n      </div>\\r\\n      <div *ngIf=\\\"newPassword.errors.pattern\\\">\\r\\n        Password must be at least 8 characters long and contain one Uppercase, one lowercase and one numeric character!\\r\\n      </div>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"confirm.invalid && (confirm.dirty || confirm.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n      <div *ngIf=\\\"confirm.errors.required\\\">\\r\\n        You need to confirm your password!\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <form (submit)=\\\"register()\\\">\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"name\\\">What's Your Name?</label>\\r\\n      <input type=\\\"text\\\" class=\\\"input-block\\\" required minlength=\\\"2\\\" maxlength=\\\"15\\\" id=\\\"name\\\" name=\\\"name\\\" [(ngModel)]=\\\"newUser.name\\\"\\r\\n        #name=\\\"ngModel\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"newEmail\\\">How About An Email?</label>\\r\\n      <input type=\\\"text\\\" class=\\\"input-block\\\" required pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,})+$\\\" id=\\\"newEmail\\\" name=\\\"newEmail\\\"\\r\\n        [(ngModel)]=\\\"newUser.email\\\" #newEmail=\\\"ngModel\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"newPasssword\\\">Pick a Password</label>\\r\\n      <input type=\\\"password\\\" class=\\\"input-block\\\" required pattern=\\\"(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\\\" id=\\\"newPassword\\\" name=\\\"newPassword\\\"\\r\\n        [(ngModel)]=\\\"newUser.password\\\" #newPassword=\\\"ngModel\\\">\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <label for=\\\"confirm\\\">Let's Confirm It</label>\\r\\n      <input type=\\\"password\\\" class=\\\"input-block\\\" required id=\\\"confirm\\\" name=\\\"confirm\\\" [(ngModel)]=\\\"newUser.confirm\\\" #confirm=\\\"ngModel\\\">\\r\\n    </div>\\r\\n    <input type=\\\"submit\\\" value=\\\"Register\\\" class=\\\"paper-btn margin\\\">\\r\\n  </form>\\r\\n  <div class=\\\"row flex-spaces child-borders\\\">\\r\\n    <label class=\\\"paper-btn margin\\\" for=\\\"login\\\">Already a user? Log In!</label>\\r\\n  </div>\\r\\n\\r\\n  <!-- login modal -->\\r\\n  <input class=\\\"modal-state\\\" id=\\\"login\\\" type=\\\"checkbox\\\">\\r\\n  <div class=\\\"modal\\\">\\r\\n    <label class=\\\"modal-bg\\\" for=\\\"login\\\"></label>\\r\\n    <div class=\\\"modal-body\\\">\\r\\n      <label class=\\\"btn-close\\\" for=\\\"login\\\">X</label>\\r\\n      <h4 class=\\\"modal-title\\\">Log In!</h4>\\r\\n      <div *ngIf=\\\"errorMessages.length >= 1\\\" class=\\\"alert alert-danger\\\">\\r\\n          <div *ngFor=\\\"let error of errorMessages\\\">\\r\\n            <p>{{error}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n      <form (submit)=\\\"login()\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"email\\\">What's Your Email?</label>\\r\\n          <input type=\\\"email\\\" class=\\\"input-block\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"passsword\\\">What's Your Password?</label>\\r\\n          <input type=\\\"password\\\" class=\\\"input-block\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\">\\r\\n        </div>\\r\\n        <input type=\\\"submit\\\" value=\\\"Log In\\\" class=\\\"pointer paper-btn margin\\\">\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <hr>\\r\\n  <br>\\r\\n  <span class=\\\"text-muted\\\">© 2018 Brenden Dowd. Built using the <a href=\\\"https://cli.angular.io/\\\">Angular CLI</a> and <a\\r\\n      href=\\\"https://www.getpapercss.com/\\\">PaperCSS</a> </span>\\r\\n\\r\\n</div> <!-- end container-->\"","import { Component, OnInit } from '@angular/core';\r\nimport { InterlinkService } from '../../interlink.service'\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-log-reg',\r\n  templateUrl: './log-reg.component.html',\r\n  styleUrls: ['./log-reg.component.css']\r\n})\r\nexport class LogRegComponent implements OnInit {\r\n  user: object\r\n  newUser: object\r\n  errorMessages: string[] = []\r\n  loginErrors: string[] = []\r\n  constructor(private _interlink: InterlinkService, private _router: Router) {\r\n    this.user = {\r\n      email:'',\r\n      password:''\r\n    }\r\n    this.newUser = {\r\n      name:'',\r\n      email:'',\r\n      password:'',\r\n      confirm:'',\r\n    }\r\n  }\r\n\r\n  login(){\r\n    this.errorMessages = [];\r\n    this.loginErrors = [];\r\n    this._interlink.login(this.user,()=>{\r\n      this.errorMessages = this._interlink.errorArr;\r\n      this.errorMessages.length > 0 ? this._router.navigate(['']) : this._router.navigate(['dashboard']);\r\n    })\r\n  }\r\n  \r\n  register() {\r\n    this.errorMessages = [];\r\n    if (this.newUser['name'] == '' || this.newUser['email'] == '' || this.newUser['password'] == '') {\r\n      this._interlink.errorArr.push(\"Fields cannot be blank!\");\r\n      this.errorMessages = this._interlink.errorArr;\r\n    }\r\n    if (this.newUser['confirm'] != this.newUser['password']) {\r\n      this._interlink.errorArr.push(\"passwords do not match!\");\r\n      this.errorMessages = this._interlink.errorArr;\r\n    }\r\n    if (this.errorMessages.length > 0) {\r\n      this._router.navigate(['']);\r\n    } else {\r\n      this._interlink.register(this.newUser, () => {\r\n        this.errorMessages = this._interlink.errorArr;\r\n        this.errorMessages.length > 0 ? this._router.navigate(['']) : this._router.navigate(['dashboard']);\r\n      })\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n@media only screen and (max-width: 770px) {\\r\\n    .nav-brand{\\r\\n        display:none;\\r\\n    }\\r\\n    .paper.container{\\r\\n        margin-top:100px;\\r\\n    }\\r\\n}\\r\\n\"","module.exports = \"<nav class=\\\"border fixed split-nav\\\">\\r\\n  <div class=\\\"nav-brand\\\">\\r\\n    <h3><a [routerLink]=\\\"['/dashboard']\\\">Lets get some work done, {{currentUser.name}}!</a></h3>\\r\\n  </div>\\r\\n  <div class=\\\"collapsible\\\">\\r\\n    <input id=\\\"collapsible1\\\" type=\\\"checkbox\\\" name=\\\"collapsible1\\\">\\r\\n    <button>\\r\\n      <label for=\\\"collapsible1\\\">\\r\\n        <div class=\\\"bar1\\\"></div>\\r\\n        <div class=\\\"bar2\\\"></div>\\r\\n        <div class=\\\"bar3\\\"></div>\\r\\n      </label>\\r\\n    </button>\\r\\n    <div class=\\\"collapsible-body\\\">\\r\\n      <ul class=\\\"inline\\\">\\r\\n        <li><a href=\\\"/logout\\\">Log Out</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n</nav>\"","import { Component, OnInit } from '@angular/core';\r\nimport { InterlinkService } from '../../interlink.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  currentUser: object\r\n  constructor(private _interlink: InterlinkService) {\r\n    this.currentUser = {\r\n      name: \"\"\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._interlink.authenticate(()=>{\r\n      this.currentUser = this._interlink.currentUser;\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InterlinkService {\r\n  errorMessage: string\r\n  errorArr: string[] = []\r\n  currentUser: object\r\n  list: object\r\n  myLists: object[] = []\r\n  listArr: BehaviorSubject<any[]> = new BehaviorSubject([])\r\n  constructor(private _http: Http, private _router: Router) {\r\n    this.list = JSON.parse(localStorage.getItem(\"list\"));\r\n  }\r\n\r\n  login(user, cb) {\r\n    this.errorMessage = null;\r\n    this.errorArr = [];\r\n    this._http.post('login', user).subscribe((res) => {\r\n      if (res.json() == null) {\r\n        this.errorMessage = \"You have entered an invalid username or password\";\r\n        this.errorArr.push(this.errorMessage)\r\n      }\r\n      cb(res)\r\n    })\r\n  }\r\n\r\n  register(user, cb) {\r\n    this.errorMessage = null;\r\n    this.errorArr = [];\r\n    this._http.post('/register', user).subscribe((res) => {\r\n      if (res.json() == null) {\r\n        this.errorMessage = \"The username or email you've entered already exists, please log in\";\r\n        this.errorArr.push(this.errorMessage)\r\n      }\r\n      cb(res)\r\n    })\r\n  }\r\n\r\n  newList(list, cb) {\r\n    this._http.post('/newList', list).subscribe((res) => {\r\n      cb(res)\r\n    })\r\n  }\r\n\r\n  getLists(cb) {\r\n    this._http.get('/getLists').subscribe((res) => {\r\n      this.myLists = res.json();\r\n      this.listArr.next(this.myLists);\r\n      cb();\r\n    })\r\n  }\r\n\r\n  viewList(id) {\r\n    this._http.get('/viewList/' + id).subscribe((res) => {\r\n      this.list = res.json();\r\n      localStorage.setItem(\"list\", JSON.stringify(this.list));\r\n      this._router.navigate(['list'])\r\n    })\r\n  }\r\n\r\n  deleteList(id, cb) {\r\n    this._http.get('/deleteList/' + id).subscribe((res) => {\r\n      this.myLists = [];\r\n      cb()\r\n    })\r\n  }\r\n\r\n  updateList(cb) {\r\n    // console.log(\"updateList-list:\", this.list)\r\n    this._http.get('/viewList/' + this.list['_id']).subscribe((res) => {\r\n      this.list = res.json();\r\n      localStorage.setItem(\"list\", JSON.stringify(this.list));\r\n      cb()\r\n    })\r\n  }\r\n\r\n  newItem(item, cb) {\r\n    this._http.post('/newItem', item).subscribe((res) => {\r\n      cb(res.json())\r\n    })\r\n  }\r\n\r\n  \r\n  deleteItem(id, cb) {\r\n    this._http.get('/deleteItem/' + id).subscribe((res) => {\r\n      cb();\r\n    })\r\n  }\r\n  \r\n  check(id, cb) {\r\n    this._http.get('/check/' + id).subscribe((res) => {\r\n      cb()\r\n    })\r\n  }\r\n\r\n\r\n  authenticate(cb) {\r\n    this._http.get('/authenticate').subscribe((res) => {\r\n      this.currentUser = res.json()\r\n      cb(res.json())\r\n    })\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}